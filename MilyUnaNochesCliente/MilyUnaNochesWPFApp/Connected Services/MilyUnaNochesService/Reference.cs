//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MilyUnaNochesWPFApp.MilyUnaNochesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessAccount", Namespace="http://schemas.datacontract.org/2004/07/MilyUnaNochesService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MilyUnaNochesWPFApp.MilyUnaNochesService.Profile))]
    public partial class AccessAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccesoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAcceso {
            get {
                return this.idAccesoField;
            }
            set {
                if ((this.idAccesoField.Equals(value) != true)) {
                    this.idAccesoField = value;
                    this.RaisePropertyChanged("idAcceso");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/MilyUnaNochesService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Profile : MilyUnaNochesWPFApp.MilyUnaNochesService.AccessAccount {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/MilyUnaNochesService.Logic")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CiudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoPostalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdDireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Calle {
            get {
                return this.CalleField;
            }
            set {
                if ((object.ReferenceEquals(this.CalleField, value) != true)) {
                    this.CalleField = value;
                    this.RaisePropertyChanged("Calle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ciudad {
            get {
                return this.CiudadField;
            }
            set {
                if ((object.ReferenceEquals(this.CiudadField, value) != true)) {
                    this.CiudadField = value;
                    this.RaisePropertyChanged("Ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoPostal {
            get {
                return this.CodigoPostalField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoPostalField, value) != true)) {
                    this.CodigoPostalField = value;
                    this.RaisePropertyChanged("CodigoPostal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdDireccion {
            get {
                return this.IdDireccionField;
            }
            set {
                if ((this.IdDireccionField.Equals(value) != true)) {
                    this.IdDireccionField = value;
                    this.RaisePropertyChanged("IdDireccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroField, value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provider", Namespace="http://schemas.datacontract.org/2004/07/MilyUnaNochesService.Logic")]
    [System.SerializableAttribute()]
    public partial class Provider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string providerContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string providerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProvider {
            get {
                return this.IdProviderField;
            }
            set {
                if ((this.IdProviderField.Equals(value) != true)) {
                    this.IdProviderField = value;
                    this.RaisePropertyChanged("IdProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAddress {
            get {
                return this.idAddressField;
            }
            set {
                if ((this.idAddressField.Equals(value) != true)) {
                    this.idAddressField = value;
                    this.RaisePropertyChanged("idAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneNumberField, value) != true)) {
                    this.phoneNumberField = value;
                    this.RaisePropertyChanged("phoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string providerContact {
            get {
                return this.providerContactField;
            }
            set {
                if ((object.ReferenceEquals(this.providerContactField, value) != true)) {
                    this.providerContactField = value;
                    this.RaisePropertyChanged("providerContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string providerName {
            get {
                return this.providerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.providerNameField, value) != true)) {
                    this.providerNameField = value;
                    this.RaisePropertyChanged("providerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MilyUnaNochesService.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        int AddUser(MilyUnaNochesWPFApp.MilyUnaNochesService.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Profile profile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : MilyUnaNochesWPFApp.MilyUnaNochesService.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<MilyUnaNochesWPFApp.MilyUnaNochesService.IUserManager>, MilyUnaNochesWPFApp.MilyUnaNochesService.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(MilyUnaNochesWPFApp.MilyUnaNochesService.Profile profile) {
            return base.Channel.AddUser(profile);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Profile profile) {
            return base.Channel.AddUserAsync(profile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MilyUnaNochesService.IAdressManager")]
    public interface IAdressManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdressManager/createAddress", ReplyAction="http://tempuri.org/IAdressManager/createAddressResponse")]
        int createAddress(MilyUnaNochesWPFApp.MilyUnaNochesService.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdressManager/createAddress", ReplyAction="http://tempuri.org/IAdressManager/createAddressResponse")]
        System.Threading.Tasks.Task<int> createAddressAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Address address);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdressManagerChannel : MilyUnaNochesWPFApp.MilyUnaNochesService.IAdressManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdressManagerClient : System.ServiceModel.ClientBase<MilyUnaNochesWPFApp.MilyUnaNochesService.IAdressManager>, MilyUnaNochesWPFApp.MilyUnaNochesService.IAdressManager {
        
        public AdressManagerClient() {
        }
        
        public AdressManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdressManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdressManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdressManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int createAddress(MilyUnaNochesWPFApp.MilyUnaNochesService.Address address) {
            return base.Channel.createAddress(address);
        }
        
        public System.Threading.Tasks.Task<int> createAddressAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Address address) {
            return base.Channel.createAddressAsync(address);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MilyUnaNochesService.IProviderManager")]
    public interface IProviderManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/CreateProvider", ReplyAction="http://tempuri.org/IProviderManager/CreateProviderResponse")]
        int CreateProvider(MilyUnaNochesWPFApp.MilyUnaNochesService.Provider newProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/CreateProvider", ReplyAction="http://tempuri.org/IProviderManager/CreateProviderResponse")]
        System.Threading.Tasks.Task<int> CreateProviderAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Provider newProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/GetProviders", ReplyAction="http://tempuri.org/IProviderManager/GetProvidersResponse")]
        MilyUnaNochesWPFApp.MilyUnaNochesService.Provider[] GetProviders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/GetProviders", ReplyAction="http://tempuri.org/IProviderManager/GetProvidersResponse")]
        System.Threading.Tasks.Task<MilyUnaNochesWPFApp.MilyUnaNochesService.Provider[]> GetProvidersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/ArchiveProvider", ReplyAction="http://tempuri.org/IProviderManager/ArchiveProviderResponse")]
        int ArchiveProvider(int idProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/ArchiveProvider", ReplyAction="http://tempuri.org/IProviderManager/ArchiveProviderResponse")]
        System.Threading.Tasks.Task<int> ArchiveProviderAsync(int idProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/DeleteProvider", ReplyAction="http://tempuri.org/IProviderManager/DeleteProviderResponse")]
        int DeleteProvider(int idProvider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProviderManager/DeleteProvider", ReplyAction="http://tempuri.org/IProviderManager/DeleteProviderResponse")]
        System.Threading.Tasks.Task<int> DeleteProviderAsync(int idProvider);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProviderManagerChannel : MilyUnaNochesWPFApp.MilyUnaNochesService.IProviderManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProviderManagerClient : System.ServiceModel.ClientBase<MilyUnaNochesWPFApp.MilyUnaNochesService.IProviderManager>, MilyUnaNochesWPFApp.MilyUnaNochesService.IProviderManager {
        
        public ProviderManagerClient() {
        }
        
        public ProviderManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProviderManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProviderManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateProvider(MilyUnaNochesWPFApp.MilyUnaNochesService.Provider newProvider) {
            return base.Channel.CreateProvider(newProvider);
        }
        
        public System.Threading.Tasks.Task<int> CreateProviderAsync(MilyUnaNochesWPFApp.MilyUnaNochesService.Provider newProvider) {
            return base.Channel.CreateProviderAsync(newProvider);
        }
        
        public MilyUnaNochesWPFApp.MilyUnaNochesService.Provider[] GetProviders() {
            return base.Channel.GetProviders();
        }
        
        public System.Threading.Tasks.Task<MilyUnaNochesWPFApp.MilyUnaNochesService.Provider[]> GetProvidersAsync() {
            return base.Channel.GetProvidersAsync();
        }
        
        public int ArchiveProvider(int idProvider) {
            return base.Channel.ArchiveProvider(idProvider);
        }
        
        public System.Threading.Tasks.Task<int> ArchiveProviderAsync(int idProvider) {
            return base.Channel.ArchiveProviderAsync(idProvider);
        }
        
        public int DeleteProvider(int idProvider) {
            return base.Channel.DeleteProvider(idProvider);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProviderAsync(int idProvider) {
            return base.Channel.DeleteProviderAsync(idProvider);
        }
    }
}
